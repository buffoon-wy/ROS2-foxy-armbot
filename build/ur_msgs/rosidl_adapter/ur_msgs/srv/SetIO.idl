// generated from rosidl_adapter/resource/srv.idl.em
// with input from ur_msgs/srv/SetIO.srv
// generated code does not contain a copyright notice


module ur_msgs {
  module srv {
    module SetIO_Request_Constants {
      const int8 FUN_SET_DIGITAL_OUT = 1;
      const int8 FUN_SET_FLAG = 2;
      const int8 FUN_SET_ANALOG_OUT = 3;
      const int8 FUN_SET_TOOL_VOLTAGE = 4;
      const int8 STATE_OFF = 0;
      const int8 STATE_ON = 1;
      const int8 STATE_TOOL_VOLTAGE_0V = 0;
      const int8 STATE_TOOL_VOLTAGE_12V = 12;
      const int8 STATE_TOOL_VOLTAGE_24V = 24;
    };
    @verbatim (language="comment", text=
      " Service allows setting digital (DIO) and analog (AIO) IO, as well as flags" "\n"
      " and configuring tool voltage." "\n"
      "" "\n"
      " This service has three request fields (see below)." "\n"
      "" "\n"
      " When setting DIO or AIO pins to new values:" "\n"
      "" "\n"
      "  fun    The function to perform" "\n"
      "  pin    Numeric ID of the pin to set" "\n"
      "  state  Desired pin state (signal level for analog or STATE_(ON|OFF) for DIO and flags)" "\n"
      "" "\n"
      " When configuring tool voltage:" "\n"
      "" "\n"
      "  fun    Set to FUN_SET_TOOL_VOLTAGE" "\n"
      "  pin    Ignored" "\n"
      "  state  Desired tool voltage (use STATE_TOOL_VOLTAGE constants)")
    struct SetIO_Request {
      @verbatim (language="comment", text=
        " request fields")
      int8 fun;

      int8 pin;

      float state;
    };
    struct SetIO_Response {
      boolean success;
    };
  };
};
